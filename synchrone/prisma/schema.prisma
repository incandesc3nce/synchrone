generator client {
  provider = "prisma-client-js"
  output   = "./generated/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username      String
  password_hash String

  // Many-to-many: user belongs to many workspaces
  workspaces Workspace[] @relation("UserWorkspaces")

  // One-to-many: user owns multiple workspaces
  ownedWorkspaces Workspace[] @relation("OwnedWorkspaces")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workspace {
  id        String   @id @default(uuid())
  name      String

  // Many-to-many: workspace has many users
  users     User[] @relation("UserWorkspaces")
  
  // One-to-many: workspace has an owner
  ownerId   String
  owner     User @relation("OwnedWorkspaces", fields: [ownerId], references: [id])

  invites    WorkspaceInvite[]
  files     File[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkspaceInvite {
  id        String   @id @default(uuid())
  workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(uuid())
  name      String
  content   String
  workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
